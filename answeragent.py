# -*- coding: utf-8 -*-
"""AnswerAgent

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14OBTQCVw4CmQrNCaQRX2yITsD0dlL2Rm

#僅需首次下載
"""

# Commented out IPython magic to ensure Python compatibility.
!mkdir -p /drive/ngrok-ssh
# %cd /drive/ngrok-ssh
!wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip -O ngrok-stable-linux-amd64.zip
!unzip -u ngrok-stable-linux-amd64.zip
!cp /drive/ngrok-ssh/ngrok /ngrok
!chmod +x /ngrok

"""#前置環境

##掛接Google Drive
"""

from google.colab import drive
drive.mount('/content/drive', force_remount=True)

!mkdir -p /drive
#umount /drive
!mount --bind /content/drive/My\ Drive /drive
!mkdir -p /drive/ngrok-ssh
!mkdir -p ~/.ssh

"""##安裝認證ngrok"""

!/ngrok authtoken 2zwL6B13OEbmX86odJSgpUcp9Ol_7LuKeVCd7oUSgGpGEAHxf

!pip install pyngrok

import getpass
from pyngrok import ngrok, conf

print("Enter your authtoken, which can be copied from https://dashboard.ngrok.com/auth")
conf.get_default().auth_token = "2zwL6B13OEbmX86odJSgpUcp9Ol_7LuKeVCd7oUSgGpGEAHxf"
# Open a TCP ngrok tunnel to the SSH server
connection_string = ngrok.connect("22", "tcp").public_url

ssh_url, port = connection_string.strip("tcp://").split(":")
print(f" * ngrok tunnel available, access with `ssh root@{ssh_url} -p{port}`")

"""##安裝line-bot-sdk函式庫"""

!pip install line-bot-sdk

"""##安裝其他"""

!pip install google-genai

"""gen-lang-client-0700041250-50b828903f03.json

##設置今日為2024-09-01
"""

from datetime import datetime, timedelta
today = datetime(2024, 9, 1)

#上週
def get_last_week_range(today):
    start_of_this_week = today - timedelta(days=today.weekday())
    start = start_of_this_week - timedelta(days=7)
    end = start + timedelta(days=6)
    return start, end

#上月
def get_last_month_range(today):
    first_of_this_month = today.replace(day=1)
    last_day_of_last_month = first_of_this_month - timedelta(days=1)
    first_day_of_last_month = last_day_of_last_month.replace(day=1)
    return first_day_of_last_month, last_day_of_last_month

start,end=get_last_week_range(today)
print(start,end)
first_day_of_last_month, last_day_of_last_month = get_last_month_range(today)
print(first_day_of_last_month, last_day_of_last_month)

#str_date = start.strftime('%Y-%m-%d')       # '2024-08-19'
#iso_date = start.isoformat()           # 也是 '2024-08-19'
#print(str_date ,iso_date)

"""#測試模組"""

#功能1：回原文
def echo_message(msg):
  return TextSendMessage(msg)

"""# LineBot簡單模組使用

檢查是否成功串入，能夠回覆訊息
"""

current_function = echo_message

from flask import Flask, request, abort
from linebot.v3.webhook import WebhookHandler
from linebot.v3.messaging import Configuration, ApiClient, MessagingApi
from linebot.v3.messaging.models import TextMessage, ReplyMessageRequest
from linebot.v3.webhooks import MessageEvent, TextMessageContent

from flask import Flask, request
from pyngrok import ngrok

from linebot import LineBotApi, WebhookHandler
from linebot.exceptions import InvalidSignatureError
from linebot.models import MessageEvent, TextMessage, TextSendMessage

from collections import defaultdict
import json
import requests

#LINE Channel Setting (LINE Developers)
access_token = '6Ety0+qdlm9GdM/VlFX5K+lnQu5IMYBWeRba2FUpmzB0TwQIfoNYA6tn/m2dnyNR/1sIiO8ek4gmrJXm4J5P6Th3Fhpz6cdAtHQwdhsk/ibMiApjxanoKghogEmdwTo7sl6fjm3FRYkJAxKpL1PKqgdB04t89/1O/w1cDnyilFU='
secret = 'b4d6920e3dcfd210051f1b413fdf894c'

#LINE Channel Check
line_bot_api = LineBotApi(access_token)
handler = WebhookHandler(secret)

# 使用 Flask 建立一個 Web 應用伺服器
app = Flask(__name__)

# Open a ngrok tunnel to the HTTP server
port = "5000"
public_url = ngrok.connect(port).public_url
print(f" * ngrok tunnel \"{public_url}\" -> \"http://127.0.0.1:{port}\" ")

#主 Webhook 路由
@app.route("/", methods=['POST'])
def linebot():
    body = request.get_data(as_text=True)# 取得收到的訊息內容
    try:
        json_data = json.loads(body)# json 格式化訊息內容
        signature = request.headers['X-Line-Signature']# 加入回傳的 headers
        handler.handle(body, signature)# 綁定訊息回傳的相關資訊
        msg = json_data['events'][0]['message']['text']# 取得 LINE 收到的文字訊息
        tk = json_data['events'][0]['replyToken']# 取得回傳訊息的 Token
        reply = current_function(msg)  # ✅ 用變數來決定使用哪個功能
        line_bot_api.reply_message(tk, reply)
    except:
        print(body)# 如果發生錯誤，印出收到的內容
    return 'OK'# 驗證 Webhook 使用，不能省略
if __name__ == "__main__":
  app.run()

"""#LineBot + SearchAgent"""